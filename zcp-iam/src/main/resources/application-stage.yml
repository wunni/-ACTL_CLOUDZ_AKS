keycloak:
  serverUrl: ${KEYCLOAK_SERVER_URL}
  master:
    realm: ${KEYCLOAK_MASTER_REALM}
    clientId: ${KEYCLOAK_MASTER_CLIENTID}
    clientSecret: ${KEYCLOAK_MASTER_CLIENT_SECRET}
    username: ${KEYCLOAK_MASTER_USERNAME}
    password: ${KEYCLOAK_MASTER_PASSWORD}

spring:
  data:
    mongodb:
      database: ${DB_NAME}
      host: ${DB_HOST}
      port: ${DB_PORT}
      username: ${DB_USER}
      password: ${DB_PWD}

# for actuator
endpoints:
  prometheus:
    sensitive: false
management:
  port: 9000

management.metrics.distribution:
  sla[http.server.requests]: 100ms, 200ms, 400ms
  percentiles-histogram[http.server.requests]: true

logging:
  level:
    com:
      skcc:
        cloudz:
          zcp: DEBUG
    io:
      kubernetes:
        client: DEBUG
    org:
      hibernate: DEBUG
      keycloak: DEBUG
      springframework:
        security: DEBUG
        web: INFO

kube:
  client:
    api:
      output:
        pretty: true
  server:
    apiserver:
      endpoint: ${KUBE_APISERVER_URL}
    metrics:
      type: metrics-server

server:
  port: 8181
zcp:
  keycloak:
    realm: zcp
    token-url: /realms/zcp/protocol/openid-connect/token
  kube:
    namespace: zcp-system
  wsh:
    template: ${WSH_TEMPLATE}
    image: ${WSH_IMAGE}

jenkins:
  url: ${JENKINS_SERVER_URL}
  token: ${JENKINS_USER_TOKEN}
  template:
    folder: ${JENKINS_TEMPLATE_PATH}

role:
  cluster:
    cluster-admin:
    - catalog-manager
    - log-manager
    - cicd-manager
    member:
  namespace:
    admin:
    - log-manager
    - catalog-manager
    - ${namespace}-admin
    cicd-manager:
    - log-manager
    - ${namespace}-cicd-manager
    developer:
    - ${namespace}-developer
  jenkins:
    admin: ${namespace}-admin
    cicd-manager: ${namespace}-cicd-manager
    developer: ${namespace}-developer